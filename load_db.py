import jsonimport sqlite3import pandas as pd#con = sqlite3.connect('NoGit/tt.db')cursor = con.cursor()def column_names(table):    cursor.execute(f"SELECT * FROM {table} limit 1;")    return sorted([a[0] for a in cursor.description])#cursor.execute("SELECT name FROM sqlite_master WHERE type='table';")tables = sorted([a[0] for a in cursor.fetchall()])table_columns = {t: column_names(t) for t in tables}print(','.join(tables))SDD = pd.read_sql('select * from schedule', con)Teachers = pd.read_sql('select * from teacher', con);TD = pd.read_sql("""     select * from schedule      join subject on subject.subject_id=schedule.subject_id      join depart on depart.depart_id=schedule.depart_id     join room on room.room_id=schedule.room_id          join subject_group on subject_group.depart_id=schedule.depart_id                            and subject_group.group_id=schedule.group_id                            and subject_group.subject_id=schedule.subject_id         ORDER BY (day_id*100+bell_id)*100 +  depart.depart_id*10+schedule.group_id """,con)# Groups-subjects-teachersGSTD=pd.read_sql("select distinct depart_label, subject_group.group_id,pupil_count, subject_name, last_name,first_name,patronymic from schedule join teacher on teacher.teacher_id=schedule.teacher_id join subject on subject.subject_id=schedule.subject_id join depart on depart.depart_id=schedule.depart_id join subject_group on subject_group.depart_id=schedule.depart_id and subject_group.group_id=schedule.group_id and subject_group.subject_id=schedule.subject_id ORDER BY depart.depart_id",con)_C = {"Classes": ["9_1", "9_2", "10_1", "10_2", "10_3", "10_4", "10_5", "10_6", "10_7", "10_8", "10_9", "11_1", "11_2", "11_3", "11_4", "11_5", "11_6", "11_7", "11_8", "11_9", "11_10", "11_11"], "Classes_groups": {"9_1": ["101", "102"], "9_2": ["103", "104"], "10_1": ["001", "002"], "10_2": ["003", "004"], "10_3": ["005", "006"], "10_4": ["105", "106"], "10_5": ["107", "108"], "10_6": ["109", "110"], "10_7": ["111", "112"], "10_8": ["113", "114"], "10_9": ["115", "116"], "11_1": ["901", "902", "903"], "11_2": ["904", "905"], "11_3": ["7", "8"], "11_4": ["9", "10"], "11_5": ["11", "12"], "11_6": ["13", "14"], "11_7": ["15", "16"], "11_8": ["17", "18"], "11_9": ["117", "118"], "11_10": ["119", "120"], "11_11": ["121", "122"]}}_C = {"Classes":[a.replace('_','-') for a in _C["Classes"]],      "Classes_groups":{c.replace('_','-'):_C['Classes_groups'][c] for c in _C['Classes_groups']}}BD = pd.read_sql('select * from bell_list', con)_C["Times"]={int(d.bell_id):str(d.time_start) for d in [BD.loc[j] for j in range(BD.shape[0])]}DD = pd.read_sql('select * from day_list', con)_C["Days"] = {int(d.day_id):{"name":str(d.day_name),"short":str(d.day_short_name)} for d in [DD.loc[j] for j in range(DD.shape[0])]}weekday_shorts = {'Вторник':'Вт', 'Понедельник':"Пн", 'Пятница':"Пт", 'Среда':"Ср", 'Суббота':"Сб", 'Четверг':"Чт"}_C['Classes_N'] = {c:max(GSTD.pupil_count[GSTD.depart_label==c]) for c in _C['Classes']}# {"9_1": 25, "9_2": 26, "10_1": 24, "10_2": 26, "10_3": 27, "10_4": 27, "10_5": 23, "10_6": 26, "10_7": 25, "10_8": 21, "10_9": 20, "11_1": 31, "11_2": 23, "11_3": 18, "11_4": 27, "11_5": 24, "11_6": 21, "11_7": 26, "11_8": 26, "11_9": 25, "11_10": 25, "11_11": 22}fname = 'web/schedule.js'with open(fname, 'w') as f:    passdef lprint(s):    with open(fname, 'a', encoding='utf-8') as f:        f.write(s+'\r\n')    print(s)def data_id(d,group):    return f'c{d.depart_label}g{group}d{d.day_id}l{d.bell_id}'lprint('_C = '+json.dumps(_C))lprint('_S = [')for j in range(TD.shape[0]):    d = TD.loc[j]    hc = d.depart_label    if d.pupil_count==_C['Classes_N'][hc]:        groups = [j+1 for j in range(len(_C['Classes_groups'][hc]))]    else:        groups = list(set(d.group_id))        td = Teachers[Teachers.teacher_id==d.teacher_id[0]]    if td.shape[0]>0:        td=td.loc[td.index[0]]        teacher_name = td.last_name+' '+td.first_name[0]+'. '+td.patronymic[0]+'.'    else:        teacher_name=''    for g in groups:        group = _C['Classes_groups'][hc][g-1]        lprint(json.dumps({                'day':d.day_id,                'l':d.bell_id,                'c':d.depart_label,                'g':group,                'room':d.room_name,                'subj':d.subject_name,                'teacher':teacher_name,                'id':data_id(d, group),            },ensure_ascii=False)+',')lprint('];')#